{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","cardContainer","display","flexDirection","backgroundColor","border","borderRadius","padding","cursor","MozOsxFontSmoothing","backfaceVisibility","transform","transition","Card","props","className","src","monster","id","alt","width","height","name","email","cardList","margin","gridTemplateColumns","gridGap","CardList","monsters","map","search","WebkitAppearance","outline","lineHeight","marginBottom","textAlign","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonster","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAIMA,EAAYC,aAAW,WAC3B,MAAO,CACLC,cAAe,CACbC,QAAS,OACTC,cAAe,SACfC,gBAAiB,UACjBC,OAAQ,iBACRC,aAAc,MACdC,QAAS,OACTC,OAAQ,UACRC,oBAAqB,YACrBC,mBAAoB,SACpBC,UAAW,gBACXC,WAAY,2BACZ,UAAW,CACTD,UAAW,oBAsBJE,EAhBF,SAACC,GACZ,IAAQb,EAAkBF,IAAlBE,cACR,OACE,sBAAKc,UAAWd,EAAhB,UACE,qBACEe,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aACHC,IAAI,UACJC,MAAO,IACPC,OAAQ,MAEV,6BAAKP,EAAMG,QAAQK,OACnB,4BAAIR,EAAMG,QAAQM,YChClBxB,EAAYC,aAAW,WAC3B,MAAO,CACLwB,SAAU,CACRJ,MAAO,OACPK,OAAQ,SACRvB,QAAS,OACTwB,oBAAqB,gBACrBC,QAAS,YAgBAC,EAXE,SAACd,GAChB,IAAQU,EAAazB,IAAbyB,SACR,OACE,qBAAKT,UAAWS,EAAhB,SACGV,EAAMe,SAASC,KAAI,SAACb,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UClBrBnB,EAAYC,aAAW,WAC3B,MAAO,CACL+B,OAAQ,CACNC,iBAAkB,OAClB3B,OAAQ,OACR4B,QAAS,OACT1B,QAAS,OACTa,MAAO,QACPc,WAAY,OACZC,aAAc,OACd7B,aAAc,MACd8B,UAAW,cAmBFC,EAdG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACxBR,EAAWhC,IAAXgC,OACR,OACE,8BACE,uBACES,KAAK,SACLzB,UAAWgB,EACXO,YAAaA,EACbG,SAAUF,OCgBHG,E,kDAnCb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAED6B,MAAQ,CACXd,SAAU,GACVe,YAAa,IALE,E,qDASnB,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAErB,SAAUoB,S,oBAG/C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/Bd,EAAR,EAAQA,SAAUe,EAAlB,EAAkBA,YAEZQ,EAAkBvB,EAASwB,QAAO,SAACpC,GAAD,OACtCA,EAAQK,KAAKgC,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAKvC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEuB,YAAY,iBACZC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAU7B,SAAUuB,W,GA9BVO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f07cad91.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    cardContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: \"#95dada\",\r\n      border: \"1px solid grey\",\r\n      borderRadius: \"5px\",\r\n      padding: \"25px\",\r\n      cursor: \"pointer\",\r\n      MozOsxFontSmoothing: \"grayscale\",\r\n      backfaceVisibility: \"hidden\",\r\n      transform: \"translateZ(0)\",\r\n      transition: \"transform 0.25s ease-out\",\r\n      \"&:hover\": {\r\n        transform: \"scale(1.05)\",\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst Card = (props) => {\r\n  const { cardContainer } = useStyles();\r\n  return (\r\n    <div className={cardContainer}>\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2`}\r\n        alt=\"monster\"\r\n        width={180}\r\n        height={180}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Card from \"../card/Card\";\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    cardList: {\r\n      width: \"85vw\",\r\n      margin: \"0 auto\",\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(4,1fr)\",\r\n      gridGap: \"20px\",\r\n    },\r\n  };\r\n});\r\n\r\nconst CardList = (props) => {\r\n  const { cardList } = useStyles();\r\n  return (\r\n    <div className={cardList}>\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    search: {\r\n      WebkitAppearance: \"none\",\r\n      border: \"none\",\r\n      outline: \"none\",\r\n      padding: \"10px\",\r\n      width: \"150px\",\r\n      lineHeight: \"30px\",\r\n      marginBottom: \"30px\",\r\n      borderRadius: \"5px\",\r\n      textAlign: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  const { search } = useStyles();\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"search\"\r\n        className={search}\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport CardList from \"./components/card-list/CardList\";\nimport SearchBox from \"./components/search-box/SearchBox\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monster\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}